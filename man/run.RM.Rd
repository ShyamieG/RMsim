% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{run.RM}
\alias{run.RM}
\title{Run Ross-Macdonald simulation}
\usage{
run.RM(N_h, N_h_t0=NULL, N_v, N_v_t0=NULL, runtime, bite_rate, raw_hv_trans_rate=NULL, raw_vh_trans_rate=NULL, eff_hv_trans_rate=NULL, eff_vh_trans_rate=NULL, h_rec_rate, v_rec_rate, h_lag, v_lag, h_max_duration, v_max_duration, mean_hyp=0, hyp_act_rate=NULL, hyp_death_rate=NULL, prev_sim_output=NULL, verbose=TRUE)
}
\arguments{
\item{N_h}{host population size}

\item{N_h_t0}{number of infected hosts to seed the simulation. \code{N_h_t0} or \code{N_v_t0} (or both) must be non-zero. Default is NULL.}

\item{N_v}{vector population size}

\item{N_v_t0}{number of infected vectors to seed the simulation. \code{N_h_t0} or \code{N_v_t0} (or both) must be non-zero. Default is NULL.}

\item{runtime}{number of time steps (i.e. days) to simulate}

\item{bite_rate}{the per-day probability that a vector will bite a host, or the mean number of bites the vector population delivers each day. The number of bites is drawn from a Poisson distribution with mean \code{bite_rate}.}

\item{raw_hv_trans_rate}{the probability that an infected host will pass the infection on to a vector when bitten. Either \code{raw_hv_trans_rate} or \code{eff_hv_trans_rate} must be specified. Default is NULL.}

\item{raw_vh_trans_rate}{the probability that an infected vector will pass the infection on to a host when it bites. Either \code{raw_vh_trans_rate} or \code{eff_vh_trans_rate} must be specified. Default is NULL.}

\item{eff_hv_trans_rate}{the effective host-to-vector transmisson rate, accounting for the initial lag period when the host in not infectious (\code{h_lag}) and the maximum duration of any host infection (\code{h_max_duration}) (see \code{\link[=calc.trans.rates]{calc.trans.rates()}}). Either \code{raw_hv_trans_rate} or \code{eff_hv_trans_rate} must be specified. Default is NULL.}

\item{eff_vh_trans_rate}{the effective vector-to-host transmisson rate, accounting for the initial lag period when the vector in not infectious (\code{v_lag}) and the maximum duration of any vector infection (\code{v_max_duration}) (see \code{\link[=calc.trans.rates]{calc.trans.rates()}}). Either \code{raw_vh_trans_rate} or \code{eff_vh_trans_rate} must be specified. Default is NULL.}

\item{h_rec_rate}{the per-day probability that an infected host will recover (or die and be replaced: i.e. transition to the uninfected and susceptible state)}

\item{v_rec_rate}{the per-day probability that an infected vector will recover (or die and be replaced: i.e. transition to the uninfected and susceptible state)}

\item{h_lag}{number of days that a newly infected host remains non-infectious}

\item{v_lag}{number of days that a newly infected vector remains non-infectious}

\item{h_max_duration}{maximum number of days that a host infection can last}

\item{v_max_duration}{maximum number of days that a host infection can last}

\item{mean_hyp}{mean number of hypnozoites generated by a vector-transmitted host infection. The number of hypnozoites is chosen from a geometric distrbution. Default is 0, meaning hypnozoites are not enabled by default.}

\item{hyp_act_rate}{the per-day probability that a dormant hypnozoite activates, thereby initiating a host infection. Must be specified if \code{mean_hyp} is non-zero. Default is NULL.}

\item{hyp_death_rate}{the per-day probability that a dormant hypnozoite dies. Must be specified if \code{mean_hyp} is non-zero. Default is NULL.}

\item{prev_sim_output}{output of a previous simulation to continue from. Default is NULL.}

\item{verbose}{should messages about simplifying steps be enabled? Default is TRUE.}
}
\value{
A list object containing the user-specified input parameters ('input_parameters'); the calculated Ross-Macdonald parameters ('RM_parameters'); an infection record ('infection_record'); a vector that summarizes the infection status of each individual ('inf_age'); a data frame that records the proportion of infected hosts and vectors at each simulated time step.\cr\cr
If hypnozoites are enabled, the output of this function will also include a list representing each host's current hypnozoite reservoir ('hyp_reservoir').\cr\cr
}
\description{
Simulates an infection scenario based on a Ross-Macdonald model given a set of user-specified parameters.
}
\details{
\code{run.RM()} is the main function of the RMsim package. It simulates an infection scenario under an agent-based Ross-Macdonald model given a set of user-specified parameters.\cr\cr
}
\examples{
## run a simple simulation without dormancy (i.e. no hypnozoites)
  set.seed(123456)
  sim0 <- run.RM(N_h = 1000,
                 N_v = 3000,
                 N_v_t0 = 10,
                 runtime = 1000,
                 bite_rate = 0.25,
                 eff_hv_trans_rate = 0.2,
                 eff_vh_trans_rate = 0.1,
                 h_rec_rate = 1/60,
                 v_rec_rate = 1/14,
                 h_lag = 14,
                 v_lag = 5,
                 h_max_duration = 270,
                 v_max_duration = 60)

## run a simple simulation with dormancy
  set.seed(123456)
  sim1 <- run.RM(N_h = 1000,
                 N_v = 3000,
                 N_v_t0 = 10,
                 runtime = 1000,
                 bite_rate = 0.25,
                 eff_hv_trans_rate = 0.2,
                 eff_vh_trans_rate = 0.1,
                 h_rec_rate = 1/60,
                 v_rec_rate = 1/14,
                 h_lag = 14,
                 v_lag = 5,
                 h_max_duration = 270,
                 v_max_duration = 60,
                 mean_hyp = 5,
                 hyp_act_rate = 1/90,
                 hyp_death_rate = 1/30)

## introduce a change in the vector population size
  set.seed(123456)
  sim2 <- run.RM(N_h = 1000,
                 N_v = 5000,
                 N_v_t0 = 10,
                 runtime = 1000,
                 bite_rate = 0.25,
                 eff_hv_trans_rate = 0.2,
                 eff_vh_trans_rate = 0.1,
                 h_rec_rate = 1/60,
                 v_rec_rate = 1/14,
                 h_lag = 14,
                 v_lag = 5,
                 h_max_duration = 270,
                 v_max_duration = 60,
                 mean_hyp = 5,
                 hyp_act_rate = 1/90,
                 hyp_death_rate = 1/30,
                 prev_sim_output = sim1)

#' ## introduce a change in the bite rate
  set.seed(123456)
  sim3 <- run.RM(N_h = 1000,
                 N_v = 5000,
                 N_v_t0 = 10,
                 runtime = 1000,
                 bite_rate = 0.15,
                 eff_hv_trans_rate = 0.2,
                 eff_vh_trans_rate = 0.1,
                 h_rec_rate = 1/60,
                 v_rec_rate = 1/14,
                 h_lag = 14,
                 v_lag = 5,
                 h_max_duration = 270,
                 v_max_duration = 60,
                 mean_hyp = 5,
                 hyp_act_rate = 1/90,
                 hyp_death_rate = 1/30,
                 prev_sim_output = sim2)

}
